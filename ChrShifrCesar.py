'''
–®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è
–í —à–∏—Ñ—Ä–µ –¶–µ–∑–∞—Ä—è –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª, —è–≤–ª—è—é—â–∏–π—Å—è –±—É–∫–≤–æ–π –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞,
–∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –¥—Ä—É–≥–æ–π —Å–∏–º–≤–æ–ª, ùëò-—Ç—ã–π –ø–æ —Å—á—ë—Ç—É –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ –ø–æ—Å–ª–µ –¥–∞–Ω–Ω–æ–≥–æ.
–ï—Å–ª–∏ —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã, —Ç–æ –±–µ—Ä—ë—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∏–∑ –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏.
–ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è ùëò=3 —Å–∏–º–≤–æ–ª ùê¥–∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ ùê∑, —Å–∏–º–≤–æ–ª ùêµ ‚Äî –Ω–∞ ùê∏, —Å–∏–º–≤–æ–ª ùê∂ ‚Äî –Ω–∞ ùêπ, ..., —Å–∏–º–≤–æ–ª ùëç ‚Äì –Ω–∞ ùê∂.
–ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –∑–∞–º–µ–Ω—è—é—Ç—Å—è –Ω–∞ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã.
–í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –Ω–µ –º–µ–Ω—è—é—Ç—Å—è.
–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞, –∑–∞—à–∏—Ñ—Ä—É–π—Ç–µ –µ—ë –ø—Ä–∏ –ø–æ–º–æ—â–∏ —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è.
–†–µ—à–µ–Ω–∏–µ –æ—Ñ–æ—Ä–º–∏—Ç–µ –≤ –≤–∏–¥–µ —Ñ—É–Ω–∫—Ü–∏–∏ CaesarCipher (S, k), –≤–æ–∑–≤—Ä–∞—â–∞—é—â–µ–π –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É.
S ‚Äî –∏—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, k ‚Äî –≤–µ–ª–∏—á–∏–Ω–∞ —Å–¥–≤–∏–≥–∞.
–§—É–Ω–∫—Ü–∏—é –Ω—É–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º k = 3.
–£–∫–∞–∑–∞–Ω–∏–µ
C–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é CaesarCipherChar (c, k), —à–∏—Ñ—Ä—É—é—â—É—é –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª.
'''


def CaesarCipherChar(c, k):
	if c.isalpha():
		shifr_char = chr(ord(c) + k)
		if shifr_char.isalpha():
			c = shifr_char
		else:
			c = chr(ord(c) - 26 + k)
	return c


def CaesarCipher(s, k):
	shifr =''
	for char in S:
		shifr += CaesarCipherChar(char, k)
	return shifr


S = input()
print(CaesarCipher(S, 3))
