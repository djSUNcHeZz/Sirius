'''
Вывести маршрут максимальной стоимости
В левом верхнем углу прямоугольной таблицы размером 𝑁×𝑀 находится черепашка.
В каждой клетке таблицы записано некоторое число.
Черепашка может перемещаться вправо или вниз,
при этом маршрут черепашки заканчивается в правом нижнем углу таблицы.
Подсчитаем сумму чисел, записанных в клетках,
через которую проползла черепашка (включая начальную и конечную клетку).
Найдите наибольшее возможное значение этой суммы и маршрут, на котором достигается эта сумма.
Входные данные
В первой строке входных данных записаны два натуральных числа 𝑁 и 𝑀, не превосходящих 100 — размеры таблицы. Далее идут 𝑁 строк, каждая из которых содержит 𝑀 чисел, разделенных пробелами — описание таблицы.
Все числа в клетках таблицы целые и могут принимать значения от 0 до 100.
Выходные данные
Первая строка выходных данных содержит максимальную возможную сумму,
вторая — маршрут, на котором достигается эта сумма.
Маршрут выводится в виде последовательности, которая должна содержать 𝑁−1 букву D,
означающую передвижение вниз и 𝑀−1 букву R, означающую передвижение направо.
Если таких последовательностей несколько, необходимо вывести ровно одну (любую) из них.
'''
N, M = map(int, input().split())
D = [list(map(int, input().split())) for row in range(N)]
W = [[0]*M for row in range(N)]
W[0][0] = D[0][0]
for x in range(1, M):
	W[0][x] = W[0][x-1] + D[0][x]
for y in range(1, N):
	W[y][0] = W[y-1][0] + D[y][0]
for y in range(1, N):
	for x in range(1, M):
		W[y][x] = max(W[y][x-1], W[y-1][x]) + D[y][x]
print(W[-1][-1])
y, x, way = N-1, M-1, ''
while y > 0 or x > 0:
	if y == 0:
		way += 'R'
		x -= 1
	elif x == 0:
		way += 'D'
		y -= 1
	elif W[y][x-1] > W[y-1][x]:
		way += 'R'
		x -= 1
	elif W[y][x-1] <= W[y-1][x]:
		way += 'D'
		y -= 1
print(' '.join(way[::-1]))
